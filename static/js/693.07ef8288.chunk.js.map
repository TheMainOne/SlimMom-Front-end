{"version":3,"file":"static/js/693.07ef8288.chunk.js","mappings":"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","sources":["components/Input/Input.styled.jsx","components/Input/Input.jsx","components/Forms/RegistrationForm/RegistrationForm.styled.jsx","components/Forms/RegistrationForm/validationSchema.js","components/Forms/RegistrationForm/RegistrationForm.jsx","pages/RegistrationPage/RegistrationPage.styled.jsx","pages/RegistrationPage/RegistrationPage.jsx"],"sourcesContent":["import { styled } from '@mui/material/styles';\nimport { TextField } from '@mui/material';\n\nconst CastomTextField = styled(TextField)`\n  & {\n    margin-bottom: 20px;\n    min-width: 240px;\n  }\n  & label {\n    color: ${({ theme: { colors } }) => colors.$grey};\n    font-family: ${({ theme: { fonts } }) => fonts.verdana};\n    font-weight: 700;\n    font-size: 14px;\n    line-height: ${({ theme: { lineHeight } }) => lineHeight.verdanaHeight};\n    letter-spacing: 0.04em;\n  }\n  & label.Mui-focused {\n    color: ${({ theme: { colors } }) => colors.$orange};\n  }\n  & .MuiInput-underline:before {\n    border-bottom: 1px solid ${({ theme: { colors } }) => colors.borderColor};\n  }\n\n  & .MuiInput-underline:after {\n    border-bottom-color: ${({ theme: { colors } }) => colors.$orange};\n  }\n`;\n\nexport { CastomTextField };\n","import { CastomTextField } from './Input.styled';\n\nexport const Input = ({\n  variant = 'standard',\n  name = '',\n  type = 'text',\n  label = '',\n  value = '',\n  onChange = () => {},\n  error = '',\n  helperText = '',\n  autoComplete = false,\n}) => {\n  return (\n    <CastomTextField\n      variant={variant}\n      id={name}\n      name={name}\n      type={type}\n      label={label}\n      value={value}\n      onChange={onChange}\n      error={error}\n      helperText={helperText}\n      autoComplete={autoComplete}\n    />\n  );\n};\n","import styled from 'styled-components/macro';\n\nconst Form = styled.form`\n  min-width: 280px;\n  display: flex;\n  flex-direction: column;\n  @media (min-width: ${({ theme: { breakpoints } }) => breakpoints.tablet}) {\n    align-items: start;\n  }\n`;\n\nconst BoxButton = styled.div`\n  margin: auto;\n  margin-top: 60px;\n  @media (min-width: ${({ theme: { breakpoints } }) => breakpoints.tablet}) {\n    margin: 60px 0 0 0;\n  }\n`;\n\nexport { Form, BoxButton };\n","import * as yup from 'yup';\n\nexport const validationSchema = yup.object({\n  name: yup\n    .string('Enter your name')\n    .min(3, 'Name should be of min 3 characters length')\n    .max(254, 'Name should be of max 254 characters length')\n    .required('Name is required'),\n  email: yup\n    .string('Enter your email')\n    .min(3, 'Email should be of min 3 characters length')\n    .max(254, 'Email should be of max 254 characters length')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter your password')\n    .min(8, 'Password should be of min 8 characters length')\n    .max(100, 'Password should be of max 100 characters length')\n    .matches(\n      /^[a-zA-Z0-9]+/,\n      'Password must contain Latin letters and/or numbers.'\n    )\n    .required('Password is required'),\n});\n","import { useDispatch, useSelector } from 'react-redux';\nimport { logIn, register } from 'redux/auth/authOperations';\nimport { useFormik } from 'formik';\nimport { BoxButton, Form } from './RegistrationForm.styled';\nimport { getUser, getUserData } from 'redux/auth/authSelector';\nimport { useEffect, useState } from 'react';\nimport { validationSchema } from './validationSchema';\nimport { useTranslation } from 'react-i18next';\nimport { Button } from 'components/Button';\nimport { Input } from 'components/Input';\n\nconst RegistrationForm = () => {\n  const { t } = useTranslation();\n\n  const [user, setUser] = useState(null);\n  const [isRegister, setIsRegister] = useState(false);\n  const dispatch = useDispatch();\n  const userInfo = useSelector(getUser);\n  const userData = useSelector(getUserData);\n\n  useEffect(() => {\n    if (isRegister && userInfo?.code === 201) {\n      setUser(userInfo.data.user);\n      dispatch(\n        logIn({\n          email: user.email,\n          password: user.password,\n        })\n      );\n      setIsRegister(false);\n    }\n  }, [userInfo, isRegister, dispatch, user]);\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: async (values, { resetForm }) => {\n      if (userData?.age) {\n        dispatch(register({ ...values, userData }));\n      } else {\n        dispatch(register({ ...values }));\n      }\n      setUser(values);\n      setIsRegister(true);\n      resetForm();\n    },\n  });\n\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n      <Input\n        name=\"name\"\n        label={t('Name *')}\n        value={formik.values.name}\n        onChange={formik.handleChange}\n        error={formik.touched.name && Boolean(formik.errors.name)}\n        helperText={formik.touched.name && formik.errors.name}\n      />\n      <Input\n        name=\"email\"\n        label={t('email')}\n        type=\"email\"\n        value={formik.values.email}\n        onChange={formik.handleChange}\n        error={formik.touched.email && Boolean(formik.errors.email)}\n        helperText={formik.touched.email && formik.errors.email}\n      />\n      <Input\n        name=\"password\"\n        label={t('password')}\n        type=\"password\"\n        autoComplete=\"new-password\"\n        value={formik.values.password}\n        onChange={formik.handleChange}\n        error={formik.touched.password && Boolean(formik.errors.password)}\n        helperText={formik.touched.password && formik.errors.password}\n      />\n      <BoxButton>\n        <Button type=\"submit\" text={t('register')} />\n      </BoxButton>\n    </Form>\n  );\n};\n\nexport default RegistrationForm;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst PageContainer = styled.div`\n  padding-top: 40px;\n  padding-bottom: 100px;\n  @media (min-width: ${({ theme: { breakpoints } }) => breakpoints.tablet}) {\n    padding-top: 160px;\n    padding-bottom: 419px;\n    @media (max-width: 1279px) and (orientation: landscape) {\n      padding-bottom: ${({ theme: { spacing } }) => spacing(28)};\n    }\n  }\n  @media (min-width: ${({ theme: { breakpoints } }) => breakpoints.desktop}) {\n    padding-bottom: 179px;\n  }\n`;\n\nconst BoxRelative = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\n\nconst BoxButton = styled.div`\n  margin: auto;\n  margin-top: 20px;\n  @media (min-width: ${({ theme: { breakpoints } }) => breakpoints.tablet}) {\n    position: absolute;\n    bottom: 0;\n    left: 215px;\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 14px;\n  font-weight: 700;\n  font-family: ${({ theme: { fonts } }) => fonts.gothamPro};\n  text-transform: uppercase;\n  color: ${({ theme: { colors } }) => colors.$orange};\n  text-align: center;\n  margin-bottom: 60px;\n  @media (min-width: ${({ theme: { breakpoints } }) => breakpoints.tablet}) {\n    text-align: start;\n  }\n`;\nconst LinkLog = styled(Link)`\n  margin: auto;\n`;\n\nexport { PageContainer, Title, LinkLog, BoxRelative, BoxButton };\n","import { Button } from 'components/Button';\nimport Container from 'components/Container';\nimport RegistrationForm from 'components/Forms/RegistrationForm';\n\nimport {\n  PageContainer,\n  Title,\n  LinkLog,\n  BoxRelative,\n  BoxButton,\n} from './RegistrationPage.styled';\nimport { useTranslation } from 'react-i18next';\n\nconst RegistrationPage = () => {\n  const { t } = useTranslation();\n\n  return (\n    <Container>\n      <PageContainer>\n        <BoxRelative>\n          <Title>{t('register')}</Title>\n          <RegistrationForm />\n          <BoxButton>\n            <LinkLog to=\"/login\">\n              <Button variant=\"outlined\" text={t('logIn')} />\n            </LinkLog>\n          </BoxButton>\n        </BoxRelative>\n      </PageContainer>\n    </Container>\n  );\n};\nexport default RegistrationPage;\n"],"names":["CastomTextField","styled","TextField","theme","colors","$grey","fonts","verdana","lineHeight","verdanaHeight","$orange","borderColor","Input","variant","name","type","label","value","onChange","error","helperText","autoComplete","id","Form","breakpoints","tablet","BoxButton","validationSchema","yup","min","max","required","email","password","matches","t","useTranslation","useState","user","setUser","isRegister","setIsRegister","dispatch","useDispatch","userInfo","useSelector","getUser","userData","getUserData","useEffect","code","data","logIn","formik","useFormik","initialValues","onSubmit","values","resetForm","age","register","handleSubmit","I","handleChange","touched","Boolean","errors","Button","text","PageContainer","spacing","desktop","BoxRelative","Title","gothamPro","LinkLog","Link","Container","to"],"sourceRoot":""}