{"version":3,"file":"static/js/718.3641fc1a.chunk.js","mappings":"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","sources":["components/Forms/LoginForm/Mui.jsx","components/Forms/LoginForm/LoginForm.styled.jsx","components/Forms/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.styled.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import { styled } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\n\nconst ButtonLogin = styled(Button)`\n  font-family: 'Verdana ';\n  font-weight: 700;\n  font-size: 14px;\n  text-transform: none;\n  background-color: #fc842d;\n  box-shadow: 0px 4px 10px rgba(252, 132, 45, 0.5);\n  border-radius: 30px;\n  margin: auto;\n  padding: 13px 57px;\n  width: 181px;\n  margin-top: 60px;\n  &:hover {\n    background-color: #e76000;\n    transform: scale(1.1);\n  }\n  @media screen and (min-width: 768px) {\n    margin: 60px 0 0;\n  }\n`;\nconst ButtonRegistration = styled(ButtonLogin)`\n  display: flex;\n  color: #fc842d;\n  background-color: #ffffff;\n  border: 2px solid #fc842d;\n  padding: 11px 69px;\n  box-shadow: none;\n  width: 182px;\n  margin-top: 20px;\n  &:hover {\n    background-color: #ffffff;\n    border: 3px solid #e76000;\n  }\n  @media screen and (min-width: 768px) {\n    position: absolute;\n    bottom: 0;\n    left: 215px;\n  }\n`;\nconst CastomTextField = styled(TextField)({\n  '& ': {\n    marginBottom: '20px',\n    minWidth: '240px',\n  },\n  '& label': {\n    color: '#9B9FAA',\n    fontFamily: 'Verdana',\n    fontWeight: 700,\n    fontSize: '14px',\n    lineHeight: '1.2',\n    letterSpacing: '0.04em',\n  },\n  '& label.Mui-focused': {\n    color: '#FC842D',\n  },\n  '& .MuiInput-underline:before': {\n    borderBottom: '1px solid #E0E0E0',\n  },\n\n  '& .MuiInput-underline:after': {\n    borderBottomColor: '#FC842D',\n  },\n});\n\nexport { ButtonLogin, CastomTextField, ButtonRegistration };\n","import styled from 'styled-components/macro';\n\nconst MainContainer = styled.div`\n\nbackground-color:blue;\n /* width: 300px; \n  padding: 40px 15px;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media (min-width: ${({ theme: { breakpoints } }) => breakpoints.tablet}) {\n    width: ${({ theme: { breakpoints } }) => breakpoints.tablet};\n    padding-left: ${({ theme: { spacing } }) => spacing(8)};\n    padding-right: ${({ theme: { spacing } }) => spacing(8)};\n  }\n\n  @media (min-width: ${({ theme: { breakpoints } }) => breakpoints.desktop}) {\n    width: ${({ theme: { breakpoints } }) => breakpoints.desktop};\n  } */\n`;\n\nconst Form = styled.form`\nmin-width: 280px;\ndisplay:flex;\nflex-direction:column;\n@media (min-width: ${({ theme: { breakpoints } }) => breakpoints.tablet}) {\n  align-items: start;\n\n }\n\n`;\n\n\nexport { MainContainer, Form };","import React from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport {  CastomTextField } from './Mui';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/authOperations';\nimport { ButtonLogin } from './Mui';\nimport { Form } from './LoginForm.styled';\n\n\nconst validationSchema = yup.object({\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter your password')\n    .min(8, 'Password should be of min 8 characters length')\n    .required('Password is required'),\n});\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchema,\n\n    onSubmit: (values, { resetForm }) => {\n      const payload = {\n        email: values.email,\n        password: values.password,\n      };\n\n      dispatch(logIn(payload));\n      resetForm({ values: '' });\n    },\n  });\n\n  return (\n    <div>\n    <Form onSubmit={formik.handleSubmit}>\n      <CastomTextField\n        variant=\"standard\"\n        id=\"email\"\n        name=\"email\"\n        label=\"Email *\"\n        value={formik.values.email}\n        onChange={formik.handleChange}\n        error={formik.touched.email && Boolean(formik.errors.email)}\n        helperText={formik.touched.email && formik.errors.email}\n      />\n      <CastomTextField\n        variant=\"standard\"\n        id=\"password\"\n        name=\"password\"\n        label=\"Password *\"\n        type=\"password\"\n        autoComplete=\"current-password\"\n        value={formik.values.password}\n        onChange={formik.handleChange}\n        error={formik.touched.password && Boolean(formik.errors.password)}\n        helperText={formik.touched.password && formik.errors.password}\n      />\n      \n          <ButtonLogin \n          color=\"primary\" \n          variant=\"contained\"  \n          type=\"submit\"  \n          disabled={!formik.isValid}>\n           Login\n        </ButtonLogin>\n      \n               \n      </Form>\n\n    </div>\n    \n     );\n};\n\nexport default LoginForm;","import styled from 'styled-components/macro';\n\nconst PageContainer = styled.div`\n  padding-bottom: 175px;\n  @media (min-width: ${({ theme: { breakpoints } }) => breakpoints.tablet}) {\n    padding-bottom: 495px;\n  }\n  @media (min-width: ${({ theme: { breakpoints } }) => breakpoints.desktop}) {\n    padding-bottom: 255px;\n  }\n`;\n\nconst BoxRelative = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\n\nconst Title = styled.h1`\n  font-size: 14px;\n  font-weight: 700;\n  padding-top: 40px;\n  font-family: ${({ theme: { fonts } }) => fonts.gothamPro};\n  text-transform: uppercase;\n  color: ${({ theme: { colors } }) => colors.$orange};\n  text-align: center;\n  margin-bottom: 60px;\n\n  @media (min-width: ${({ theme: { breakpoints } }) => breakpoints.tablet}) {\n    padding-top: 160px;\n  }\n\n  @media (min-width: ${({ theme: { breakpoints } }) => breakpoints.tablet}) {\n    text-align: start;\n  }\n`;\n\nexport { PageContainer, Title, BoxRelative };\n","import { useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { ButtonRegistration } from 'components/Forms/LoginForm/Mui';\nimport LoginForm from '../../components/Forms/LoginForm';\n// import { Spinner } from '../../components/Spinner/Spinner';\n// import { selectShowLoader } from '../../redux/slices/loaderSlice';\nimport { PageContainer, Title, BoxRelative } from './LoginPage.styled';\nimport Container from 'components/Container';\nimport Navigation from 'components/Header/Navigation';\nimport { getIsLoggedIn } from 'redux/auth/authSelector';\n\nconst styles = {\n  \n  isHidden: {\n    display: 'none',\n  },\n};\n\nconst LoginPage = () => {\n  // const isLoading = useSelector(selectShowLoader); // Селектор статуса загрузки\n  const isLogged = useSelector(state => getIsLoggedIn(state));\n\n  useEffect(() => {\n    document.title = 'Вход в профиль | SlimMom';\n  }, []);\n\n  return (\n    <Container>\n      <PageContainer>\n        {isLogged && (\n        <>\n        <Navigation stylehidden={styles.isHidden}/>\n        </>\n        )\n        }\n        <BoxRelative>\n          <Title>Sign In</Title>\n          <LoginForm />\n          <NavLink to=\"/signup\">\n            <ButtonRegistration\n              color=\"primary\"\n              variant=\"outlined\"\n              type=\"button\"\n            >\n              Register\n            </ButtonRegistration>\n          </NavLink>\n        </BoxRelative>\n      </PageContainer>\n    </Container>\n  );\n};\n\nexport default LoginPage;\n"],"names":["ButtonLogin","styled","Button","ButtonRegistration","CastomTextField","TextField","marginBottom","minWidth","color","fontFamily","fontWeight","fontSize","lineHeight","letterSpacing","borderBottom","borderBottomColor","Form","theme","breakpoints","tablet","validationSchema","yup","email","required","password","min","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","values","resetForm","payload","logIn","handleSubmit","variant","id","name","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","autoComplete","disabled","isValid","PageContainer","desktop","BoxRelative","Title","fonts","gothamPro","colors","$orange","styles","isHidden","display","isLogged","useSelector","state","getIsLoggedIn","useEffect","document","title","Container","Navigation","stylehidden","to"],"sourceRoot":""}