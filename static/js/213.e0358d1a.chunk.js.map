{"version":3,"file":"static/js/213.e0358d1a.chunk.js","mappings":"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","sources":["components/Forms/RegistrationForm/transformUserData.js","components/Forms/RegistrationForm/RegistrationForm.styled.jsx","components/Forms/RegistrationForm/MuI.jsx","components/Forms/RegistrationForm/validationSchema.js","components/Forms/RegistrationForm/RegistrationForm.jsx","pages/RegistrationPage/RegistrationPage.styled.jsx","pages/RegistrationPage/RegistrationPage.jsx","redux/slices/selector.js"],"sourcesContent":["export const transformUserData = userParams => {\n  const userData = {};\n  if (userParams?.age) {\n    Object.keys(userParams).forEach(\n      param => (userData[param] = Number(userParams[param]))\n    );\n  }\n  return userData;\n};\n","import styled from 'styled-components/macro';\n\nconst Form = styled.form`\n  min-width: 280px;\n  display: flex;\n  flex-direction: column;\n  @media (min-width: ${({ theme: { breakpoints } }) => breakpoints.tablet}) {\n    align-items: start;\n  }\n`;\n\nexport { Form };\n","import { styled } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\n\nconst ButtonRegister = styled(Button)`\n  font-family: 'Verdana';\n  font-weight: 700;\n  font-size: 14px;\n  text-transform: none;\n  background-color: #fc842d;\n  box-shadow: 0px 4px 10px rgba(252, 132, 45, 0.5);\n  border-radius: 30px;\n  margin: auto;\n  padding: 13px 57px;\n  margin-top: 60px;\n  &:hover {\n    background-color: #e76000;\n    transform: scale(1.1);\n  }\n  @media screen and (min-width: 768px) {\n    margin: 60px 0 0 0;\n  }\n`;\nconst LinkLogin = styled(ButtonRegister)`\n  color: #fc842d;\n  background-color: #ffffff;\n  border: 2px solid #fc842d;\n  padding: 11px 69px;\n  box-shadow: none;\n  margin-top: 20px;\n  &:hover {\n    background-color: #ffffff;\n    border: 3px solid #e76000;\n  }\n  @media screen and (min-width: 768px) {\n    position: absolute;\n    bottom: 0;\n    left: 215px;\n  }\n`;\nconst CastomTextField = styled(TextField)({\n  '& ': {\n    marginBottom: '20px',\n    minWidth: '240px',\n  },\n  '& label': {\n    color: '#9B9FAA',\n    fontFamily: 'Verdana',\n    fontWeight: 700,\n    fontSize: '14px',\n    lineHeight: '1.2',\n    letterSpacing: '0.04em',\n  },\n  '& label.Mui-focused': {\n    color: '#FC842D',\n  },\n  '& .MuiInput-underline:before': {\n    borderBottom: '1px solid #E0E0E0',\n  },\n\n  '& .MuiInput-underline:after': {\n    borderBottomColor: '#FC842D',\n  },\n});\n\nexport { ButtonRegister, CastomTextField, LinkLogin };\n","import * as yup from 'yup';\n\nexport const validationSchema = yup.object({\n  name: yup\n    .string('Enter your name')\n    .min(3, 'Name should be of min 3 characters length')\n    .max(254, 'Name should be of max 254 characters length')\n    .required('Name is required'),\n  email: yup\n    .string('Enter your email')\n    .min(3, 'Email should be of min 3 characters length')\n    .max(254, 'Email should be of max 254 characters length')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter your password')\n    .min(8, 'Password should be of min 8 characters length')\n    .max(100, 'Password should be of max 100 characters length')\n    .matches(\n      /^[a-zA-Z0-9]+/,\n      'Password must contain Latin letters and/or numbers.'\n    )\n    .required('Password is required'),\n});\n","import { useDispatch, useSelector } from 'react-redux';\nimport { logIn, register } from 'redux/auth/authOperations';\nimport { useFormik } from 'formik';\nimport { Form } from './RegistrationForm.styled';\nimport { ButtonRegister, CastomTextField } from './MuI';\nimport { getUser } from 'redux/auth/authSelector';\nimport { useEffect, useState } from 'react';\nimport { getUserParams } from 'redux/slices/selector';\nimport { validationSchema } from './validationSchema';\nimport { transformUserData } from './transformUserData';\n\nconst RegistrationForm = () => {\n  const [user, setUser] = useState(null);\n  const [isRegister, setIsRegister] = useState(false);\n  const dispatch = useDispatch();\n  const userInfo = useSelector(getUser);\n  const userParams = useSelector(getUserParams);\n\n  useEffect(() => {\n    if (isRegister && userInfo?.code === 201) {\n      setUser(userInfo.data.user);\n      dispatch(\n        logIn({\n          email: user.email,\n          password: user.password,\n        })\n      );\n      setIsRegister(false);\n    }\n  }, [userInfo, isRegister, dispatch, user]);\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: async (values, { resetForm }) => {\n      if (userParams?.age) {\n        const userData = transformUserData(userParams);\n        dispatch(register({ ...values, userData }));\n      } else {\n        dispatch(register({ ...values }));\n      }\n      setUser(values);\n      setIsRegister(true);\n      resetForm();\n    },\n  });\n\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n      <CastomTextField\n        variant=\"standard\"\n        id=\"name\"\n        name=\"name\"\n        label=\"Name *\"\n        value={formik.values.name}\n        onChange={formik.handleChange}\n        error={formik.touched.name && Boolean(formik.errors.name)}\n        helperText={formik.touched.name && formik.errors.name}\n      />\n      <CastomTextField\n        variant=\"standard\"\n        id=\"email\"\n        name=\"email\"\n        label=\"Email *\"\n        value={formik.values.email}\n        onChange={formik.handleChange}\n        error={formik.touched.email && Boolean(formik.errors.email)}\n        helperText={formik.touched.email && formik.errors.email}\n      />\n      <CastomTextField\n        variant=\"standard\"\n        id=\"password\"\n        name=\"password\"\n        label=\"Password *\"\n        type=\"password\"\n        autoComplete=\"new-password\"\n        value={formik.values.password}\n        onChange={formik.handleChange}\n        error={formik.touched.password && Boolean(formik.errors.password)}\n        helperText={formik.touched.password && formik.errors.password}\n      />\n\n      <ButtonRegister color=\"primary\" variant=\"contained\" type=\"submit\">\n        Register\n      </ButtonRegister>\n    </Form>\n  );\n};\n\nexport default RegistrationForm;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst PageContainer = styled.div`\n  padding-top: 40px;\n  padding-bottom: 100px;\n  @media (min-width: ${({ theme: { breakpoints } }) => breakpoints.tablet}) {\n    padding-top: 160px;\n    padding-bottom: 419px;\n  }\n  @media (min-width: ${({ theme: { breakpoints } }) => breakpoints.desktop}) {\n    padding-bottom: 179px;\n  }\n`;\n\nconst BoxRelative = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\n\nconst Title = styled.h1`\n  font-size: 14px;\n  font-weight: 700;\n  font-family: ${({ theme: { fonts } }) => fonts.gothamPro};\n  text-transform: uppercase;\n  color: ${({ theme: { colors } }) => colors.$orange};\n  text-align: center;\n  margin-bottom: 60px;\n  @media (min-width: ${({ theme: { breakpoints } }) => breakpoints.tablet}) {\n    text-align: start;\n  }\n`;\nconst LinkLog = styled(Link)`\n  margin: auto;\n`;\n\nexport { PageContainer, Title, LinkLog, BoxRelative };\n","import Container from 'components/Container';\nimport RegistrationForm from 'components/Forms/RegistrationForm';\nimport { LinkLogin } from 'components/Forms/RegistrationForm/MuI';\nimport {\n  PageContainer,\n  Title,\n  LinkLog,\n  BoxRelative,\n} from './RegistrationPage.styled';\n\nconst RegistrationPage = () => {\n  return (\n    <Container>\n      <PageContainer>\n        <BoxRelative>\n          <Title>Register</Title>\n          <RegistrationForm />\n          <LinkLog to=\"/login\">\n            <LinkLogin color=\"primary\" variant=\"outlined\" type=\"button\">\n              Login\n            </LinkLogin>\n          </LinkLog>\n        </BoxRelative>\n      </PageContainer>\n    </Container>\n  );\n};\nexport default RegistrationPage;\n","export const getUserParams = state => state.userInfo.userInfo;\n"],"names":["transformUserData","userParams","userData","age","Object","keys","forEach","param","Number","Form","styled","theme","breakpoints","tablet","ButtonRegister","Button","LinkLogin","CastomTextField","TextField","marginBottom","minWidth","color","fontFamily","fontWeight","fontSize","lineHeight","letterSpacing","borderBottom","borderBottomColor","validationSchema","yup","name","min","max","required","email","password","matches","useState","user","setUser","isRegister","setIsRegister","dispatch","useDispatch","userInfo","useSelector","getUser","getUserParams","useEffect","code","data","logIn","formik","useFormik","initialValues","onSubmit","values","resetForm","register","handleSubmit","variant","id","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","autoComplete","PageContainer","desktop","BoxRelative","Title","fonts","gothamPro","colors","$orange","LinkLog","Link","Container","to","state"],"sourceRoot":""}